#!/bin/bash

# Schedule regular 'git fetch' every hour between 6h and 21h with the following line:
#   crontab -l | { cat; echo "5 6-21 * * * $(pwd)/zsh/git_fetch_job"; } | crontab -
# You might see a dialog to confirm that Terminal.app might update the settings of your computer.
# Also you might have to allow cron to access your disk. See links below.
# SOURCE: 11oct2021 https://serverfault.com/a/1012212
# SOURCE: 11oct2021 https://stackoverflow.com/a/879022
# SOURCE: 11oct2021 https://osxdaily.com/2020/04/27/fix-cron-permissions-macos-full-disk-access/

set -euo pipefail

CACHE_GIT_DIR=~/.cache/git/fetch
CACHE_GIT_FETCH_LOGFILE="${CACHE_GIT_DIR}/$(date +"%Y%m_%b").log"
REPO_DIRS=()
REPO_DIRS+=(~/dev/repos)

mkdir -p "${CACHE_GIT_DIR}"

cat << EOF >> "${CACHE_GIT_FETCH_LOGFILE}"
---
$(date)
Starting updates in git repos in ${REPO_DIRS[@]}...

EOF

find ${REPO_DIRS[@]} \
    -name .git \
    -type d \
    -maxdepth 4 \
    -execdir echo \; \
    -execdir date \; \
    -execdir pwd \; \
    -execdir echo '$ git throttled-fetch --all --verbose --progress --prune' \;\
    -execdir git throttled-fetch --all --verbose --progress --prune \; \
    1>"${CACHE_GIT_FETCH_LOGFILE}" 2>&1

cat << EOF >> "${CACHE_GIT_FETCH_LOGFILE}"

$(date)
Finished updates in git repos in ${REPO_DIRS}.


EOF
